[AsaManagerService]
webservicePort = 9024


; Storage where ASA will write telemetry messages
; The application is responsible for preparing this storage before the ASA Job starts
[AsaManagerService:MessagesStorage]
telemetryStorageType = ""
documentDBConnectionString = ""
documentDBDatabase = "pcs-iothub-stream"
documentDBCollection = "messages"
; For telemetry scenarios, eventual consistency is ok
documentDBConsistencyLevel = "Eventual"
; 2500 => unlimited space - see https://docs.microsoft.com/en-us/azure/cosmos-db/partition-data
documentDBRUs = 2500


; Storage where ASA will write alarms
; The application is responsible for preparing this storage before the ASA Job starts
[AsaManagerService:AlarmsStorage]
alarmsStorageType = "CosmosDbSql"
documentDBConnectionString = ""
documentDBdatabase = "pcs-iothub-stream"
documentDBcollection = "alarms"
; For telemetry scenarios, eventual consistency is ok
documentDBconsistencyLevel = "Eventual"
; 400 => fixed storage 10GB - see https://docs.microsoft.com/en-us/azure/cosmos-db/partition-data
documentDBRUs = 400

[AsaManagerService:EventHub]
; Connection string for event hub
messagesEventHubConnectionString = ""
; Name of event hub
messagesEventHubName = ""
; event hub checkpoint interval in msecs
checkpointIntervalmsecs = 60000

[AsaManagerService:BlobStorage]
; Blob Storage Container name for ASA reference data
referenceDataContainer="referenceinput"
; Blob Storage Container name for Event Hub Checkpoints
eventhubContainer="eventhub-checkpoints"
; Blob Storage Account Name
storageAccountName=""
; Blob Storage Account Key
storageAccountKey=""
; Blob Storage Endpoint Suffix
storageEndpointSuffix=""
; Following parameters create file path for device groups mapping
; in blob storage. 
; File path will be:
; {YYYY-MM-DD}/{HH-mm}/{device_groups_file_name}
; For ASA file name must be in this format, see:
; https://docs.microsoft.com/en-us/azure/stream-analytics/stream-analytics-use-reference-data
referenceDataDateFormat="yyyy-MM-dd"
referenceDataTimeFormat="HH-mm"
referenceDataDeviceGroupsFileName="devicegroups.csv"
referenceDataRulesFileName="rules.json"


[AsaManagerService:Logging]
; Application log levels: Debug, Info, Warn, Error
; Default: Warn
logLevel = "${?PCS_LOG_LEVEL}"
; Whether to log the ProcessId, true by default
includeProcessId = true
; How to format the datetime in the logs
; example: DateFormat = "yyyy-MM-dd HH:mm:ss.fff"
dateFormat = "yyyy-MM-dd HH:mm:ss.fff"
; Prefix to add to the items listed in BlackListSources and WhiteListSources
; example: BWListPrefix = "Microsoft.Azure.IoTSolutions.AsaManager."
bwListPrefix = "Microsoft.Azure.IoTSolutions.AsaManager."
; Comma separated list of classes and methods to ignore, i.e. discard logs from
; example: BlackListSources = "AsaConfigAgent.Program,HttpClient.*"
blackListSources = ""
; Comma separated list of classes and methods to include, i.e. discard everything else
; example: WhiteListSources = "HttpClient.*"
whiteListSources = ""
; Whether to generate extra log files to diagnose the application. This is disk I/O intensive
; and most likely affects the overall performance. Enable this option only for development
; to get detailed information about the state of each actor and each device.
; Default: false
extraDiagnostics = false
; Folder to store the extra diagnostics. Logging is disabled if the folder cannot
; be created or is not writable.
extraDiagnosticsPath = "/tmp/asa/"


[AsaManagerService:ClientAuth]
; Current auth type, only "JWT" is currently supported.
authType="JWT"
; This can be changed to false, for example during development,
; to allow invalid/missing authorizations.
; Default: true
authRequired=""
; Can be used when running services on multiple hostnames and/or ports
; e.g. "{ 'origins': ['*'], 'methods': ['*'], 'headers': ['*'] }" to allow everything.
; Comment it or leave it empty to disable CORS.
; Default: empty
corsWhitelist = ""


[AsaManagerService:ClientAuth:JWT]
; Trusted algorithms
; Default: RS256, RS384, RS512
allowedAlgorithms="RS256"
; Identifies the security token service (STS) that constructs and returns the token.
; In the tokens that Azure AD returns, the issuer is sts.windows.net. The GUID in
; the Issuer claim value is the tenant ID of the Azure AD directory. The tenant ID
; is an immutable and reliable identifier of the directory.
; Used to verify that tokens are issued by Azure AD.
; When using Azure Active Directory, the format of the Issuer is:
; https://sts.windows.net/<tenant Id>/
; example: issuer="https://sts.windows.net/fa01ade2-2365-4dd1-a084-a6ef027090fc/"
authIssuer=""
; Used to verify that tokens are issued to be given to this service
; Also referenced as "Application Id" and "Resource Id"
; example: audience="2814e709-6a0e-4861-9594-d3b6e2b81331"
aadTenantId=""
; When validating the token expiration, allows some clock skew
; Default: 2 minutes
clockSkewSeconds = 300

[ExternalDependencies]
; The Device Telemetry service is used to retrieve the list
; of monitoring rules, which are used to generate ASA Jobs configuration
; e.g. http://127.0.0.1:9004/v1/rules
telemetryWebServiceUrl = ""
; timeout value in milliseconds
telemetryWebServiceTimeoutMsecs = 10000

; The Configuration service is used to retrieve the list
; of device groups, which are referenced in the monitoring rules
; e.g. http://127.0.0.1:9005/v1
configWebServiceUrl =""
; timeout value in milliseconds
configWebServiceTimeoutMsecs = 10000

; The IoT Hub Manager service is used to run device queries,
; e.g. to retrieve the list of device IDs in a device group
; e.g. http://127.0.0.1:9002/v1
iothubmanagerWebServiceUrl = ""
; timeout value in milliseconds
iothubmanagerTimeoutMsecs = 10000

; number of retries to attempt before failing
retryCount = 5
; initial interval to wait before retrying. Subsequent retries will
; increase interval by retry_increase_factor
initialRetryIntervalMsecs = 750
retryIncreaseFactor = 2

[KeyVault]
aadAppId = ${PCS_AAD_APPID}
aadAppSecret = ${PCS_AAD_APPSECRET}
name = ${PCS_KEYVAULT_NAME}

; For more information about ASP.NET logging see
; https://docs.microsoft.com/en-us/aspnet/core/fundamentals/logging
; This configuration block is used only to capture
; internal logs generated by ASP.NET
; ASP.NET log levels: Trace, Debug, Information, Warning, Error, Critical
[Logging]
IncludeScopes = true
LogLevel:Default = "Warning"
LogLevel:System = "Warning"
LogLevel:Microsoft = "Warning"

